{"ast":null,"code":"var _jsxFileName = \"/Users/ajaysaini/Documents/GitHub/crypto-react-design/src/pages/FreezePlan/FreezePlan.jsx\";\nimport React from 'react';\nimport InvestmentPlan from '../../component/InvestmentPlan/InvestmentPlan';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FreezePlan = () => {\n  const investmentPlans = [\n  // {\n  //     plantime: \"Weekly\",\n  //     plan_Price: \"$10\",\n  //     totleplantime: \"Week\",\n  //     saveprice: \"$50\",\n  //     planfeature: [\"One account\", \"100K Coin\", \"Customer Support\", \"Help 24/7\"],\n  // },\n  {\n    plantime: \"Monthly\",\n    plan_Price: \"$50\",\n    totleplantime: \"month\",\n    saveprice: \"$100\",\n    planfeature: [\"One account\", \"500K Coin\", \"Customer Support\", \"Help 24/7\"],\n    isActive: true // Example of an active plan\n  }\n  // {\n  //     plantime: \"Yearly\",\n  //     plan_Price: \"$100\",\n  //     totleplantime: \"year\",\n  //     saveprice: \"$150\",\n  //     planfeature: [\"Six account\", \"10M Coin\", \"Customer Support\", \"Help 24/7\"],\n  // },\n  // Add more plans as needed\n  ];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-fluid planSection pb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"sectionHeading\",\n              children: \"Choose your plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row gy-4 pt-5 justify-content-center\",\n              children: investmentPlans.map((plan, index) => /*#__PURE__*/_jsxDEV(InvestmentPlan, {\n                plantime: plan.plantime,\n                plan_Price: plan.plan_Price,\n                totleplantime: plan.totleplantime,\n                saveprice: plan.saveprice,\n                planfeature: plan.planfeature,\n                buyplan: plan.buyplan,\n                isActive: plan.isActive\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = FreezePlan;\nexport default FreezePlan;\nvar _c;\n$RefreshReg$(_c, \"FreezePlan\");","map":{"version":3,"names":["React","InvestmentPlan","jsxDEV","_jsxDEV","Fragment","_Fragment","FreezePlan","investmentPlans","plantime","plan_Price","totleplantime","saveprice","planfeature","isActive","children","class","fileName","_jsxFileName","lineNumber","columnNumber","map","plan","index","buyplan","_c","$RefreshReg$"],"sources":["/Users/ajaysaini/Documents/GitHub/crypto-react-design/src/pages/FreezePlan/FreezePlan.jsx"],"sourcesContent":["import React from 'react'\nimport InvestmentPlan from '../../component/InvestmentPlan/InvestmentPlan'\nconst FreezePlan = () => {\n    const investmentPlans = [\n        // {\n        //     plantime: \"Weekly\",\n        //     plan_Price: \"$10\",\n        //     totleplantime: \"Week\",\n        //     saveprice: \"$50\",\n        //     planfeature: [\"One account\", \"100K Coin\", \"Customer Support\", \"Help 24/7\"],\n        // },\n        {\n            plantime: \"Monthly\",\n            plan_Price: \"$50\",\n            totleplantime: \"month\",\n            saveprice: \"$100\",\n            planfeature: [\"One account\", \"500K Coin\", \"Customer Support\", \"Help 24/7\"],\n            isActive: true // Example of an active plan\n        },\n        // {\n        //     plantime: \"Yearly\",\n        //     plan_Price: \"$100\",\n        //     totleplantime: \"year\",\n        //     saveprice: \"$150\",\n        //     planfeature: [\"Six account\", \"10M Coin\", \"Customer Support\", \"Help 24/7\"],\n        // },\n        // Add more plans as needed\n    ];\n    return (\n        <>\n            <div class=\"container-fluid planSection pb-5\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div class=\"sectionHeading\">\n                                Choose your plan\n                            </div>\n                        </div>\n                        <div class=\"col-12\">\n                            <div class=\"row gy-4 pt-5 justify-content-center\">\n                            {investmentPlans.map((plan, index) => (\n                            <InvestmentPlan \n                                key={index} \n                                plantime={plan.plantime} \n                                plan_Price={plan.plan_Price} \n                                totleplantime={plan.totleplantime} \n                                saveprice={plan.saveprice} \n                                planfeature={plan.planfeature} \n                                buyplan={plan.buyplan} \n                                isActive={plan.isActive} \n                            />\n                        ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default FreezePlan"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,+CAA+C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC1E,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACrB,MAAMC,eAAe,GAAG;EACpB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;IACIC,QAAQ,EAAE,SAAS;IACnBC,UAAU,EAAE,KAAK;IACjBC,aAAa,EAAE,OAAO;IACtBC,SAAS,EAAE,MAAM;IACjBC,WAAW,EAAE,CAAC,aAAa,EAAE,WAAW,EAAE,kBAAkB,EAAE,WAAW,CAAC;IAC1EC,QAAQ,EAAE,IAAI,CAAC;EACnB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA,CACH;EACD,oBACIV,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACIX,OAAA;MAAKY,KAAK,EAAC,kCAAkC;MAAAD,QAAA,eACzCX,OAAA;QAAKY,KAAK,EAAC,WAAW;QAAAD,QAAA,eAClBX,OAAA;UAAKY,KAAK,EAAC,KAAK;UAAAD,QAAA,gBACZX,OAAA;YAAKY,KAAK,EAAC,QAAQ;YAAAD,QAAA,eACfX,OAAA;cAAKY,KAAK,EAAC,gBAAgB;cAAAD,QAAA,EAAC;YAE5B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACNhB,OAAA;YAAKY,KAAK,EAAC,QAAQ;YAAAD,QAAA,eACfX,OAAA;cAAKY,KAAK,EAAC,sCAAsC;cAAAD,QAAA,EAChDP,eAAe,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjCnB,OAAA,CAACF,cAAc;gBAEXO,QAAQ,EAAEa,IAAI,CAACb,QAAS;gBACxBC,UAAU,EAAEY,IAAI,CAACZ,UAAW;gBAC5BC,aAAa,EAAEW,IAAI,CAACX,aAAc;gBAClCC,SAAS,EAAEU,IAAI,CAACV,SAAU;gBAC1BC,WAAW,EAAES,IAAI,CAACT,WAAY;gBAC9BW,OAAO,EAAEF,IAAI,CAACE,OAAQ;gBACtBV,QAAQ,EAAEQ,IAAI,CAACR;cAAS,GAPnBS,KAAK;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAQb,CACJ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAK,EAAA,GAzDKlB,UAAU;AA2DhB,eAAeA,UAAU;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}